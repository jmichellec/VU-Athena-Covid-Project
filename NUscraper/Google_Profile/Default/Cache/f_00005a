{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src_js/helpers/data_stores/theme_store.js","webpack:///./src_js/helpers/storage_adapter.js","webpack:///./src_js/helpers/environment.js","webpack:///./src_js/helpers/url_params.js","webpack:///./src_js/themes/client.js","webpack:///./src_js/fastjs.js","webpack:///./src_js/helpers/webview.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","theme_local_store","StorageAdapter","ttl","theme_session_store","type","options","self","this","storagetype","replace","store_enabled","environment","slug","str","encodeURIComponent","charCodeAt","toString","store","_ttl","expiry_date","ttl_string","ttl_arr","match","Date","seconds_to_add","legend","h","w","M","Q","y","length","arr","split","parseInt","setSeconds","getSeconds","toJSON","TypeError","test","storage","JSON","parse","window","e","clear","expires","data","set","stringify","env_is_browser","Function","env_is_node","env_is_mobilebrowser","navigator","userAgent","search","url_params","location","param","detect_theme","in_webview","theme","toLowerCase","apply_theme","new_theme","document","documentElement","setAttribute"],"mappings":"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","file":"js/fastjs.63127eb4.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/bundles/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"d0bf\");\n","/**\n * Store for NU.theme.\n * Used for user theme, default is null.\n */\n\nimport StorageAdapter from '../storage_adapter';\n\nconst theme_local_store = new StorageAdapter('NU.theme', 'local', { ttl: '1y' });\nconst theme_session_store = new StorageAdapter('NU.theme', 'session', { ttl: '1y' });\n\nexport { theme_local_store, theme_session_store };\n","import environment from './environment';\n\n/*\n StorageAdapter for local/session storage.\n\n Expects:\n name: name of instance. Will also be used (slugified) as name for local/session storage.\n type: local or session. Also accepts localStorage or sessionStorage. Defaults to session.\n options: key/value pair of additional options:\n    ttl: ttl string (1s, 1m, 1d) or seconds. Defaults to 1 day.\n\n    Supported units:\n        years           y\n        quarters        Q\n        months          M\n        weeks           w\n        days            d\n        hours           h\n        minutes         m\n        seconds         s\n\n    Example string: 1y2M2w6d\n*/\n\nexport default function (name, type, options) {\n    const self = this;\n    // allowing the use of type to be 'local' or 'session'. Defaults to session.\n    const storagetype = type ? type.replace(/[Ss]torage$/i, '') + 'Storage' : 'sessionStorage';\n\n    // check whether local/sesstion storage is available. If not, we're in Node environment and this function becomes a shell.\n    const store_enabled = environment === 'window';\n\n    // prevent storage to barf over malformed names: use slug instead of name.\n    const slug = (function (str) {\n        return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n            return '%' + c.charCodeAt(0).toString(16);\n        });\n    })(name);\n\n    // if in Node environment, store inside this var:\n    let store = '';\n\n    const _ttl = typeof options === 'object' ? options.ttl : '1d';\n\n    // construct TTL from easy to read string\n    const expiry_date = (function (ttl_string) {\n        // if ttl is number, convert to seconds.\n        if (typeof ttl_string === 'number') {\n            ttl_string += 's';\n        }\n\n        // split the string to chunks containing 1 or more digits + 1 char.\n        // Floats are not supported (e.g. .5d => 5d, use 12h instead)\n        // If no TTL is provided, a day is ought to be enough.\n        const ttl_arr = typeof ttl_string === 'string' ? ttl_string.replace(/\\s/gi, '').match(/\\d+(?:\\D)/gi) : '1d';\n        const expiry_date = new Date();\n        let seconds_to_add = 0;\n\n        let legend = {\n            s: 1,\n            m: 60,\n            h: 3600,\n            d: 3600 * 24\n        };\n\n        legend = {\n            ...legend,\n            w: legend.d * 7,\n            M: legend.d * 30,\n            Q: legend.d * 91,\n            y: legend.d * 365\n        };\n\n        for (let i = 0, m = ttl_arr.length; i < m; i++) {\n            // split string in count and unit.\n            const arr = ttl_arr[i].split(/(:?\\D)/);\n\n            // convert to seconds, to later add to expiry date.\n            seconds_to_add += legend[arr[1]] * parseInt(arr[0], 10);\n        }\n\n        // append seconds to\n        expiry_date.setSeconds(expiry_date.getSeconds() + seconds_to_add);\n\n        return expiry_date.toJSON();\n    })(_ttl);\n\n    // Prevent execution if not all required parameters have been provided.\n    if (!name) {\n        throw new TypeError('Invalid parameter: name not specified.');\n    }\n\n    if (!slug || slug === 'undefined') {\n        throw new TypeError('Invalid parameter: name could not be slugified.');\n    }\n\n    // Also check if storage type is either local or session.\n    if (!(/^(local|session)Storage$/).test(storagetype)) {\n        throw new TypeError('Invalid storage type: ' + type + ', expected: local | session.');\n    }\n\n    // Retrieve data. All data is stored in JSON.\n    this.get = function () {\n        if (store_enabled) {\n            let storage = {};\n\n            try {\n                storage = JSON.parse(window[storagetype][slug]);\n            } catch (e) {\n                self.clear();\n                return false;\n            }\n\n            try {\n                if (Date.parse(storage.expires) >= new Date()) {\n                    // Data is valid, return it.\n                    return storage.data;\n                } else {\n                    // Data is invalid. Remove the slug from the storage, to prevent clutter.\n                    self.clear();\n                }\n            } catch (e) {\n                self.clear();\n                return false;\n            }\n            return false;\n        } else {\n            try {\n                return JSON.parse(store);\n            } catch (e) {\n                return false;\n            }\n        }\n    };\n\n    // Store data. All data is stored in JSON.\n    this.set = function (data) {\n        if (store_enabled) {\n            window[storagetype][slug] = JSON.stringify({\n                expires: expiry_date,\n                data: data\n            });\n        } else {\n            store = JSON.stringify(data);\n        }\n    };\n\n    // This function removes the slug from the storage.\n    this.clear = function () {\n        if (store_enabled) {\n            window[storagetype][slug] = '';\n            delete window[storagetype][slug];\n            store = {};\n        }\n    };\n\n    return {\n        // define getters/setters.\n        get value () {\n            return self.get();\n        },\n        set value (data) {\n            return self.set(data);\n        },\n        clear () {\n            self.clear();\n        }\n    };\n}\n","/* eslint no-new-func: 0 */\n\n// detect in what scope we are working. Sometimes necessary. Try to avoid usage if possible.\nconst env_is_browser = new Function('try {return this===window;}catch(e){ return false; }')();\nconst env_is_node = new Function('try {return this===global;}catch(e){ return false; }')();\nconst environment = env_is_browser ? 'window' : env_is_node ? 'global' : 'unknown';\n\n/* returns true if page is being loaded in mobile device browser */\nconst env_is_mobilebrowser = (function () {\n    if (env_is_browser && navigator && navigator.userAgent) {\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobi/i.test(navigator.userAgent)) {\n            return true;\n        }\n    }\n    return false;\n})();\n\n// backwards compatibility: return environment by default.\nexport default environment;\n\nexport {\n    environment,\n    env_is_browser,\n    env_is_node,\n    env_is_mobilebrowser\n};\n","/* Constructs an object from the parameters in window.location.search */\nimport environment from './environment';\n\nconst search = {};\n\n// only execute if a browser is accessing this code, otherwise return empty object.\nif (environment === 'window') {\n    // get params from window.location.search\n    const url_params = window.location.search.split(/[?&]/);\n\n    // parse params.\n    for (let i = 0; i < url_params.length; i++) {\n        const param = url_params[i].split('=');\n\n        // supports binary param, setting value as true if found, e.g. ?foo\n        if (param.length === 1 && param[0].length > 0) {\n            search[param[0]] = true;\n        }\n\n        // supports ?foo=bar\n        if (param.length === 2) {\n            search[param[0]] = param[1];\n        }\n    }\n}\n\nexport default search;\n","import { theme_local_store, theme_session_store } from '../helpers/data_stores/theme_store';\nimport search from '../helpers/url_params';\nimport in_webview from '../helpers/webview';\n\n/**\n * Get the current theme from either search param or store.\n *\n * @returns {string|boolean}\n */\nfunction detect_theme () {\n    // get the theme from the search parameter, only when in webview.\n    if (in_webview) {\n        if (search.theme) {\n            return search.theme.toLowerCase();\n\n            // check if theme is stored in local storage\n        } else if (theme_session_store.value) {\n            return theme_session_store.value;\n        }\n    } else {\n        if (theme_local_store.value) {\n            return theme_local_store.value;\n        }\n    }\n\n    // no theme, so return false.\n    return false;\n}\n\n/**\n * Apply new theme without checking validity\n * @param new_theme\n */\nfunction apply_theme (new_theme) {\n    document.documentElement.setAttribute('data-theme', new_theme);\n}\n\nconst theme = detect_theme();\nif (theme) {\n    apply_theme(theme, true);\n}\n\nexport {\n    detect_theme,\n    apply_theme\n};\n","/* set theme as soon as possible */\nimport { apply_theme, detect_theme } from './themes/client';\n\nconst theme = detect_theme();\nif (theme) {\n    apply_theme(theme);\n}\n","import environment from './environment';\n\n// detect page is loaded in Sanoma apps webview\nexport default (environment === 'window' && /sanoma\\/app/i.test(window.navigator.userAgent));\n"],"sourceRoot":""}